version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: kanxa-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: kanxasafari
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - kanxa-network

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: kanxa-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - kanxa-network

  # Main application
  app:
    build: .
    container_name: kanxa-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password@mongodb:27017/kanxasafari?authSource=admin
      PORT: 3000
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    networks:
      - kanxa-network
    volumes:
      - ./uploads:/app/uploads  # For file uploads if needed

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: kanxa-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates
    depends_on:
      - app
    networks:
      - kanxa-network

volumes:
  mongodb_data:
  redis_data:

networks:
  kanxa-network:
    driver: bridge
